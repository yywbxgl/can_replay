// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file CanFrame.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_PROJ233_MSGS_MSG_CANFRAME_H_
#define _FAST_DDS_GENERATED_PROJ233_MSGS_MSG_CANFRAME_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>



#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(CANFRAME_SOURCE)
#define CANFRAME_DllAPI __declspec( dllexport )
#else
#define CANFRAME_DllAPI __declspec( dllimport )
#endif // CANFRAME_SOURCE
#else
#define CANFRAME_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define CANFRAME_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima



namespace proj233_msgs {

namespace msg {



/*!
 * @brief This class represents the structure CanFrame defined by the user in the IDL file.
 * @ingroup CanFrame
 */
class CanFrame
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport CanFrame();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~CanFrame();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object proj233_msgs::msg::CanFrame that will be copied.
     */
    eProsima_user_DllExport CanFrame(
            const CanFrame& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object proj233_msgs::msg::CanFrame that will be copied.
     */
    eProsima_user_DllExport CanFrame(
            CanFrame&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object proj233_msgs::msg::CanFrame that will be copied.
     */
    eProsima_user_DllExport CanFrame& operator =(
            const CanFrame& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object proj233_msgs::msg::CanFrame that will be copied.
     */
    eProsima_user_DllExport CanFrame& operator =(
            CanFrame&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x proj233_msgs::msg::CanFrame object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const CanFrame& x) const;

    /*!
     * @brief Comparison operator.
     * @param x proj233_msgs::msg::CanFrame object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const CanFrame& x) const;

    /*!
     * @brief This function sets a value in member id
     * @param _id New value for member id
     */
    eProsima_user_DllExport void id(
            uint32_t _id);

    /*!
     * @brief This function returns the value of member id
     * @return Value of member id
     */
    eProsima_user_DllExport uint32_t id() const;

    /*!
     * @brief This function returns a reference to member id
     * @return Reference to member id
     */
    eProsima_user_DllExport uint32_t& id();


    /*!
     * @brief This function sets a value in member len
     * @param _len New value for member len
     */
    eProsima_user_DllExport void len(
            uint8_t _len);

    /*!
     * @brief This function returns the value of member len
     * @return Value of member len
     */
    eProsima_user_DllExport uint8_t len() const;

    /*!
     * @brief This function returns a reference to member len
     * @return Reference to member len
     */
    eProsima_user_DllExport uint8_t& len();


    /*!
     * @brief This function copies the value in member data
     * @param _data New value to be copied in member data
     */
    eProsima_user_DllExport void data(
            const std::array<uint8_t, 8>& _data);

    /*!
     * @brief This function moves the value in member data
     * @param _data New value to be moved in member data
     */
    eProsima_user_DllExport void data(
            std::array<uint8_t, 8>&& _data);

    /*!
     * @brief This function returns a constant reference to member data
     * @return Constant reference to member data
     */
    eProsima_user_DllExport const std::array<uint8_t, 8>& data() const;

    /*!
     * @brief This function returns a reference to member data
     * @return Reference to member data
     */
    eProsima_user_DllExport std::array<uint8_t, 8>& data();

private:

    uint32_t m_id{0};
    uint8_t m_len{0};
    std::array<uint8_t, 8> m_data{0};

};

} // namespace msg

} // namespace proj233_msgs

#endif // _FAST_DDS_GENERATED_PROJ233_MSGS_MSG_CANFRAME_H_



